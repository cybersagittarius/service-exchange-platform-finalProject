[{"/home/dci/Desktop/service-exchange-platform-finalProject/client/src/index.jsx":"1","/home/dci/Desktop/service-exchange-platform-finalProject/client/src/App.jsx":"2","/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/Header.jsx":"3","/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/Main.jsx":"4","/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/About.jsx":"5","/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/Footer.jsx":"6","/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/Team.jsx":"7","/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/userAccount/Login.jsx":"8","/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/userAccount/Register.jsx":"9","/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/userAccount/ResetPW.jsx":"10","/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/data.js":"11","/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/Find.jsx":"12","/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/Lingua.jsx":"13","/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/userAccount/forms/LoginForm.jsx":"14","/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/userAccount/forms/ResetPWForm.jsx":"15","/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/userAccount/forms/RegistrationForm.jsx":"16","/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/userAccount/layout/Alert.jsx":"17","/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/userAccount/layout/ButtonMU.jsx":"18","/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/userAccount/selector/RegionCountrySelector.jsx":"19","/home/dci/Desktop/service-exchange-platform-finalProject/client/src/assets/js/itemsSkills.js":"20","/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/FoundProfiles.jsx":"21","/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/SkillsMenu.jsx":"22","/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/DisplayedSelection.jsx":"23","/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/userAccount/upload-edit/AvatarUploader.jsx":"24"},{"size":159,"mtime":1619000961633,"results":"25","hashOfConfig":"26"},{"size":1073,"mtime":1619000961549,"results":"27","hashOfConfig":"26"},{"size":216,"mtime":1619000961549,"results":"28","hashOfConfig":"26"},{"size":1214,"mtime":1619000961549,"results":"29","hashOfConfig":"26"},{"size":2225,"mtime":1619000961549,"results":"30","hashOfConfig":"26"},{"size":437,"mtime":1619762904394,"results":"31","hashOfConfig":"26"},{"size":2090,"mtime":1619000961549,"results":"32","hashOfConfig":"26"},{"size":2715,"mtime":1619762541722,"results":"33","hashOfConfig":"26"},{"size":6930,"mtime":1619791732664,"results":"34","hashOfConfig":"26"},{"size":1393,"mtime":1619762541726,"results":"35","hashOfConfig":"26"},{"size":1903,"mtime":1619000961549,"results":"36","hashOfConfig":"26"},{"size":1847,"mtime":1619533642592,"results":"37","hashOfConfig":"26"},{"size":1027,"mtime":1619000961549,"results":"38","hashOfConfig":"26"},{"size":5605,"mtime":1619762577286,"results":"39","hashOfConfig":"26"},{"size":1942,"mtime":1619000961633,"results":"40","hashOfConfig":"26"},{"size":6966,"mtime":1619789132968,"results":"41","hashOfConfig":"26"},{"size":422,"mtime":1619000961633,"results":"42","hashOfConfig":"26"},{"size":541,"mtime":1619762577286,"results":"43","hashOfConfig":"26"},{"size":1929,"mtime":1619000961633,"results":"44","hashOfConfig":"26"},{"size":1375,"mtime":1619533642592,"results":"45","hashOfConfig":"26"},{"size":192,"mtime":1619533642592,"results":"46","hashOfConfig":"26"},{"size":3120,"mtime":1619533642592,"results":"47","hashOfConfig":"26"},{"size":339,"mtime":1619533642592,"results":"48","hashOfConfig":"26"},{"size":2608,"mtime":1619789406395,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"h3fy7c",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/home/dci/Desktop/service-exchange-platform-finalProject/client/src/index.jsx",[],["104","105"],"/home/dci/Desktop/service-exchange-platform-finalProject/client/src/App.jsx",[],"/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/Header.jsx",[],"/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/Main.jsx",[],"/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/About.jsx",[],"/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/Footer.jsx",[],"/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/Team.jsx",["106","107"],"import { useState, useEffect } from \"react\";\nimport team from \"./data\";\nimport { FiChevronRight, FiChevronLeft } from \"react-icons/fi\";\n\nconst Team = () => {\n  const [people, setPeople] = useState(team);\n  const [index, setIndex] = useState(0);\n\n  const prevSlide = () => {\n    setIndex((oldIndex) => {\n      let index = oldIndex - 1;\n      if (index < 0) {\n        index = people.length - 1;\n      }\n      return index;\n    });\n  };\n  const nextSlide = () => {\n    setIndex((oldIndex) => {\n      let index = oldIndex + 1;\n      if (index > people.length - 1) {\n        index = 0;\n      }\n      return index;\n    });\n  };\n\n  useEffect(() => {\n    let slider = setInterval(() => {\n      setIndex((oldIndex) => {\n        let index = oldIndex + 1;\n        if (index > people.length - 1) {\n          index = 0;\n        }\n        return index;\n      });\n    }, 5000);\n    return () => {\n      clearInterval(slider);\n    };\n  }, [index]);\n\n  return (\n    <section className=\"team section\">\n      <div id=\"contact\" className=\"title\">\n        <h2>our team</h2>\n      </div>\n      <div className=\"section-center\">\n        {people.map((person, personIndex) => {\n          const { id, image, name, title, quote } = person;\n          let position = \"nextSlide\";\n          if (personIndex === index) {\n            position = \"activeSlide\";\n          }\n          if (\n            personIndex === index - 1 ||\n            (index === 0 && personIndex === people.length - 1)\n          ) {\n            position = \"lastIndex\";\n          }\n\n          return (\n            <article key={id} className={position}>\n              <img src={image} alt={name} className=\"person-img\" />\n              <h4>{name}</h4>\n              <p className=\"title\">{title}</p>\n              <p className=\"text\">{quote}</p>\n            </article>\n          );\n        })}\n        <button className=\"prev\">\n          <FiChevronLeft onClick={prevSlide} />\n        </button>\n        <button className=\"next\">\n          <FiChevronRight onClick={nextSlide} />\n        </button>\n      </div>\n    </section>\n  );\n};\n\nexport default Team;\n","/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/userAccount/Login.jsx",[],"/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/userAccount/Register.jsx",[],"/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/userAccount/ResetPW.jsx",[],"/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/data.js",[],"/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/Find.jsx",["108"],"import React, { useState } from \"react\";\nimport { CountryDropdown, RegionDropdown } from \"react-country-region-selector\";\nimport SkillsMenu from \"./SkillsMenu\";\nimport FoundProfiles from './FoundProfiles';\nimport items from '../assets/js/itemsSkills.js'\n/* import DisplayedSelection from \"./DisplayedSelection\"; */\n\nfunction Find() {\n  const [country, setCountry] = useState(\" \");\n  const [region, setRegion] = useState(\" \");\n  const [offerSelection, setofferSelection] = useState([]);\n  const [lookSelection, setlookSelection] = useState([]);\n\n  const selectCountry = (e) => {\n    setCountry(e);\n  };\n\n  const selectRegion = (e) => {\n    setRegion(e);\n  };\n\n  const handleOfferSelection = (selection) => {\n    setofferSelection(selection)\n  }\n\n  const handlelookSelection = (selection) => {\n    setlookSelection(selection)\n  }\n\n  const handleFind = () => {\n    //This function send info to the backend\n  }\n\n  return (\n    <form className=\"form\">\n    {/* <DisplayedSelection listOfSelection={offerSelection} /> */}\n      <SkillsMenu\n        title=\"I can offer\"\n        items={items}\n        multiSelect\n        selection={offerSelection}\n        handleSelection={handleOfferSelection}\n      />\n      {/* <DisplayedSelection listOfSelection={lookSelection} /> */}\n      <SkillsMenu \n      title=\"I'm looking for\" \n      items={items} \n      multiSelect\n      selection={lookSelection}\n      handleSelection={handlelookSelection}\n      />\n      <CountryDropdown value={country} onChange={(e) => selectCountry(e)} />\n      <RegionDropdown\n        country={country}\n        value={region}\n        onChange={(e) => selectRegion(e)}\n      />\n      <div className=\"btnFindDiv\">\n        <button onclick= {handleFind} type=\"submit\" value=\"search\" className=\"btnFind\" >\n          Find\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default Find;\n","/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/Lingua.jsx",["109","110","111","112","113","114","115"],"import { Link } from \"react-router-dom\";\n\nconst Login = () => {\n  return (\n    <div className=\"btn-group\" role=\"group\">\n      <Link to=\"/login\">\n        <button className=\"btn log\">\n          <a href=\"#\">Login</a>\n        </button>\n      </Link>\n      <Link to=\"/register\">\n        <button className=\"btn log\">\n          <a href=\"#\">Register</a>\n        </button>\n      </Link>\n      <a\n        id=\"btnGroupDrop\"\n        type=\"button\"\n        className=\"dropdown-toggle\"\n        data-bs-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n      >\n        EN\n      </a>\n      <div className=\"dropdown-menu linguaMenu lingua\" aria-labelledby=\"btnGroupDrop1\">\n        <a className=\"dropdown-item\" href=\"#\">\n          DE\n        </a>\n        <a className=\"dropdown-item\" href=\"#\">\n          PT\n        </a>\n        <a className=\"dropdown-item\" href=\"#\">\n          ES\n        </a>\n        <a className=\"dropdown-item\" href=\"#\">\n          ZH\n        </a>\n      </div>\n    </div>\n  );\n}\nexport default Login;\n","/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/userAccount/forms/LoginForm.jsx",["116"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport MyAlert from \"../layout/Alert\";\nimport ButtonMU from \"../layout/ButtonMU\";\n\n//import FontAweSomeIcon and library modules, then set up your own icon library to avoid overloading with other unused icons\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { library } from \"@fortawesome/fontawesome-svg-core\";\n\n// import {\n//   faGoogle,\n//   faFacebook,\n//   faTwitter,\n// } from \"@fortawesome/free-brands-svg-icons\";\n\n// library.add(\n//   faGoogle,\n//   faFacebook,\n//   faTwitter,\n// );\n\nconst LoginForm = (props) => {\n  return (\n    <>\n      <div className=\"backLogin\">\n        <div className=\"div-center\">\n          <div className=\"container\">\n            <div className=\"card-body\">\n              <div className=\"d-flex justify-content-end\">\n                <ButtonMU\n                  buttonVariant={\"outlined\"}\n                  buttonColor={\"primary\"}\n                  buttonSize={\"small\"}\n                />\n              </div>\n\n              <div className=\"row\">\n                <div className=\"col-lg-12\">\n                  {props.alertEM && (\n                    <MyAlert\n                      alertType={\"warning\"}\n                      alertHeading={\"Error!\"}\n                      alertMessage={\"Please Enter A Valid Email \"}\n                    />\n                  )}\n                  {props.alertPW && (\n                    <MyAlert\n                      alertType={\"danger\"}\n                      alertHeading={\"Incorrect!\"}\n                      alertMessage={\"Please Enter A Valid Password \"}\n                    />\n                  )}\n                </div>\n              </div>\n\n              <form onSubmit={props.submitHandler}>\n                <fieldset>\n                <br />\n                  <div className=\"form-row\">\n                    <div className=\"form-group col-lg-6\">\n                      <label>Your Email</label>\n\n                      <input\n                        type=\"text\"\n                        name=\"email\"\n                        placeholder=\"email\"\n                        className=\"form-control\"\n                        value={props.email}\n                        onChange={props.changeEmail}\n                        required\n                      />\n                    </div>\n\n                    <div className=\"form-group col-lg-6\">\n                      <label>Your Password</label>\n                      <br />\n                      <input\n                        type=\"password\"\n                        name=\"passWord\"\n                        placeholder=\"password\"\n                        className=\"form-control\"\n                        value={props.passWord}\n                        onChange={props.changePW}\n                        required\n                      />\n                    </div>\n\n                    <div className=\"form-check form-group ml-4 col-lg-2\">\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-check-input\"\n                        checked={props.rememberMe}\n                        onChange={props.changeRM}\n                        //in theory onClick should be used but Chrome prefers onChange here\n                      />\n                      <label> Remember Me </label>\n                    </div>\n\n                    <div className=\"form-check form-group col-lg-3\">\n                      <button type=\"submit\" className=\"btn btn-primary btn-sm\">\n                        Login\n                      </button>\n                    </div>\n\n                    <div className=\"form-check form-group mx-auto col-lg-5\">\n                      <Link to=\"/reset_password\">\n                        <a href=\"#\"> Forgot Your Password?</a>     \n                      </Link>\n                    </div>\n\n                    <h6 className=\"col-lg-12 mt-2 text-center\">\n                      If you have not already registered with us, register and join us! \n                    </h6>\n{/*                     \n                    <div className=\"form-check form-group mx-auto\" aria-label=\"buttonExample\"> \n                      <button \n                        type=\"button\" \n                        className=\"btn btn-primary\">\n                        <a href=\"#\"></a>\n                        <FontAwesomeIcon\n                          icon={[\"fab\", \"google\"]}\n                          size=\"1x\"\n                        />\n                      </button>\n                      </div>\n\n                      <div className=\"form-check form-group mx-auto\">\n                      <button \n                        type=\"button\" \n                        className=\"btn btn-warning\">\n                        <a href=\"#\"></a>\n                        <FontAwesomeIcon icon={[\"fab\", \"facebook\"]} size=\"1x\" />\n                      </button>\n                      </div>\n                      \n                      <div className=\"form-check form-group mx-auto\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-secondary\"\n                        style={{ color: \"white\" }}\n                      >\n                        <a href=\"#\"></a>\n                        <FontAwesomeIcon icon={[\"fab\", \"twitter\"]} size=\"1x\" />\n                      </button>\n                      </div>                    */}\n                    </div>                  \n                </fieldset>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LoginForm;\n","/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/userAccount/forms/ResetPWForm.jsx",[],"/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/userAccount/forms/RegistrationForm.jsx",[],"/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/userAccount/layout/Alert.jsx",[],"/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/userAccount/layout/ButtonMU.jsx",[],"/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/userAccount/selector/RegionCountrySelector.jsx",["117","118"],"//source: https://www.npmjs.com/package/react-country-region-selector\n//npm i react-country-region-selector or yarn add react-country-region-selector\n\nimport React, { useState } from \"react\";\n\n// note that you can also export the source data via CountryRegionData. It's in a deliberately concise format to\n// keep file size down\n\nimport {\n  CountryDropdown,\n  RegionDropdown,\n  CountryRegionData,\n} from \"react-country-region-selector\";\n\nconst RegionCountrySelector = ({\n  setParentCountry,\n  setParentRegion,\n  country,\n  region,\n}) => {\n  const selectCountry = (val) => {\n    setParentCountry(val);\n  };\n\n  const selectRegion = (val) => {\n    setParentRegion(val);\n  };\n\n  return (\n    <>\n      {/* <div className=\"form row-lg-12\"> */}\n      <div>\n        <CountryDropdown\n          // className=\"form-control col-lg-6\"\n          className=\"form-control\"\n          value={country}\n          onChange={(val) => selectCountry(val)}\n        />\n\n        <RegionDropdown\n          // className=\"form-control col-lg-6\"\n          className=\"form-control\"\n          country={country}\n          value={region}\n          onChange={(val) => selectRegion(val)}\n        />\n      </div>\n    </>\n  );\n};\n// class RegionCountrySelector extends Component {\n//   constructor (props) {\n//     super(props);\n//     this.state = { country: '', region: '' };\n//   }\n\n//   selectCountry (val) {\n//     this.setState({ country: val });\n//   }\n\n//   selectRegion (val) {\n//     this.setState({ region: val });\n//   }\n\n//   render () {\n//     const { country, region } = this.state;\n//     return (\n//       <div>\n//         <CountryDropdown\n//           value={country}\n//           onChange={(val) => this.selectCountry(val)} />\n//         <RegionDropdown\n//           country={country}\n//           value={region}\n//           onChange={(val) => this.selectRegion(val)} />\n//       </div>\n//     );\n//   }\n// }\n\nexport default RegionCountrySelector;\n","/home/dci/Desktop/service-exchange-platform-finalProject/client/src/assets/js/itemsSkills.js",[],"/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/FoundProfiles.jsx",[],"/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/SkillsMenu.jsx",[],"/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/DisplayedSelection.jsx",[],"/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/userAccount/upload-edit/AvatarUploader.jsx",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":6,"column":18,"nodeType":"125","messageId":"126","endLine":6,"endColumn":27},{"ruleId":"127","severity":1,"message":"128","line":41,"column":6,"nodeType":"129","endLine":41,"endColumn":13,"suggestions":"130"},{"ruleId":"123","severity":1,"message":"131","line":4,"column":8,"nodeType":"125","messageId":"126","endLine":4,"endColumn":21},{"ruleId":"132","severity":1,"message":"133","line":8,"column":11,"nodeType":"134","endLine":8,"endColumn":23},{"ruleId":"132","severity":1,"message":"133","line":13,"column":11,"nodeType":"134","endLine":13,"endColumn":23},{"ruleId":"132","severity":1,"message":"135","line":16,"column":7,"nodeType":"134","endLine":23,"endColumn":8},{"ruleId":"132","severity":1,"message":"133","line":27,"column":9,"nodeType":"134","endLine":27,"endColumn":47},{"ruleId":"132","severity":1,"message":"133","line":30,"column":9,"nodeType":"134","endLine":30,"endColumn":47},{"ruleId":"132","severity":1,"message":"133","line":33,"column":9,"nodeType":"134","endLine":33,"endColumn":47},{"ruleId":"132","severity":1,"message":"133","line":36,"column":9,"nodeType":"134","endLine":36,"endColumn":47},{"ruleId":"132","severity":1,"message":"133","line":108,"column":25,"nodeType":"134","endLine":108,"endColumn":37},{"ruleId":"123","severity":1,"message":"136","line":4,"column":17,"nodeType":"125","messageId":"126","endLine":4,"endColumn":25},{"ruleId":"123","severity":1,"message":"137","line":12,"column":3,"nodeType":"125","messageId":"126","endLine":12,"endColumn":20},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-unused-vars","'setPeople' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'people.length'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setIndex' needs the current value of 'people.length'.","ArrayExpression",["140"],"'FoundProfiles' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useState' is defined but never used.","'CountryRegionData' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},"Update the dependencies array to be: [index, people.length]",{"range":"143","text":"144"},[923,930],"[index, people.length]"]