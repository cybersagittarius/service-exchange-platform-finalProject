{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/userAccount/ResetPW.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ResetPWForm from \"./forms/ResetPWForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ResetPW = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [alertEM, setAlertEM] = useState(false);\n\n  const postEmail = data => {\n    console.log(data); //fetch data to send it to backend\n\n    fetch('http://localhost:4000/reset_password', {\n      method: \"POST\",\n      headers: {\n        'Context-Type': 'application/json'\n      },\n      body: JSON.stringify(data) //in backend the data will be received in req.body\n\n    }).then(res => res.json()).then(emailReceived => console.log(emailReceived)).catch(err => console.log(err));\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const emailValidator = /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,15}$/;\n    const isEmValid = emailValidator.test(email);\n\n    if (!isEmValid) {\n      setAlertEM(true);\n      setTimeout(() => {\n        setAlertEM(false);\n      }, 5000);\n      return false;\n    }\n\n    setEmail(\"\");\n  };\n\n  const changeEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ResetPWForm, {\n      postEmail: postEmail,\n      submitHandler: submitHandler,\n      changeEmail: changeEmail,\n      email: email,\n      alertEM: alertEM\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ResetPW, \"SvBvRnLeRThyotV9l1Li5f5JCDU=\");\n\n_c = ResetPW;\nexport default ResetPW;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPW\");","map":{"version":3,"sources":["/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/userAccount/ResetPW.jsx"],"names":["React","useState","ResetPWForm","ResetPW","email","setEmail","alertEM","setAlertEM","postEmail","data","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","emailReceived","catch","err","submitHandler","e","preventDefault","emailValidator","isEmValid","test","setTimeout","changeEmail","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,qBAAxB;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMO,SAAS,GAAIC,IAAD,IAAS;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EADyB,CAGzB;;AACAG,IAAAA,KAAK,CAAC,sCAAD,EAAyC;AAC5CC,MAAAA,MAAM,EAAE,MADoC;AAE5CC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAFmC;AAG5CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAHsC,CAI5C;;AAJ4C,KAAzC,CAAL,CAMCS,IAND,CAMMC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EANX,EAOCF,IAPD,CAOMG,aAAa,IAAEX,OAAO,CAACC,GAAR,CAAYU,aAAZ,CAPrB,EAQCC,KARD,CAQOC,GAAG,IAAEb,OAAO,CAACC,GAAR,CAAYY,GAAZ,CARZ;AASD,GAbD;;AAeA,QAAMC,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,cAAc,GAAG,mDAAvB;AACA,UAAMC,SAAS,GAAGD,cAAc,CAACE,IAAf,CAAoBzB,KAApB,CAAlB;;AAEA,QAAI,CAACwB,SAAL,EAAgB;AACdrB,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAuB,MAAAA,UAAU,CAAC,MAAM;AACfvB,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAFS,EAEP,IAFO,CAAV;AAGA,aAAO,KAAP;AACD;;AACDF,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAdD;;AAgBA,QAAM0B,WAAW,GAAIN,CAAD,IAAO;AACzBpB,IAAAA,QAAQ,CAACoB,CAAC,CAACO,MAAF,CAASC,KAAV,CAAR;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE,QAAC,WAAD;AACE,MAAA,SAAS,EAAKzB,SADhB;AAEE,MAAA,aAAa,EAAKgB,aAFpB;AAGE,MAAA,WAAW,EAAKO,WAHlB;AAIE,MAAA,KAAK,EAAK3B,KAJZ;AAKE,MAAA,OAAO,EAAKE;AALd;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAYD,CAnDD;;GAAMH,O;;KAAAA,O;AAqDN,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ResetPWForm from \"./forms/ResetPWForm\";\n\nconst ResetPW = () => {\n  const [email, setEmail] = useState(\"\");\n  const [alertEM, setAlertEM] = useState(false);\n\n  const postEmail = (data) =>{\n    console.log(data);\n\n    //fetch data to send it to backend\n    fetch('http://localhost:4000/reset_password', {\n      method: \"POST\",\n      headers: {'Context-Type': 'application/json'},\n      body: JSON.stringify(data)\n      //in backend the data will be received in req.body\n    })\n    .then(res=>res.json())\n    .then(emailReceived=>console.log(emailReceived))\n    .catch(err=>console.log(err))\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const emailValidator = /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,15}$/;\n    const isEmValid = emailValidator.test(email);\n\n    if (!isEmValid) {\n      setAlertEM(true);\n      setTimeout(() => {\n        setAlertEM(false);\n      }, 5000);\n      return false;\n    }\n    setEmail(\"\");\n  };\n\n  const changeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  return (\n    <>\n      <ResetPWForm\n        postEmail = { postEmail }\n        submitHandler = { submitHandler }\n        changeEmail = { changeEmail }\n        email = { email }\n        alertEM = { alertEM }\n\n      />\n    </>\n  );\n};\n\nexport default ResetPW;\n"]},"metadata":{},"sourceType":"module"}