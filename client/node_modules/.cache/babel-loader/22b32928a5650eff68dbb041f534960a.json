{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/userAccount/ResetPW.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ResetPWForm from \"./forms/ResetPWForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ResetPW = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [alertEM, setAlertEM] = useState(false); // const postEmail = (email) =>{\n  //   data = { email }\n  //   //fetch data to send it to backend\n  //   fetch('http://localhost:4000/reset_password', {\n  //     method: \"POST\",\n  //     headers: {'Context-Type': 'application/json'},\n  //     body: JSON.stringify(data)\n  //     //in backend the data will be received in req.body\n  //   })\n  //   .then(res=>res.json())\n  //   .then(emailReceived=>console.log(emailReceived))\n  //   .catch(err=>console.log(err))\n  // }\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const emailValidator = /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,15}$/;\n    const isEmValid = emailValidator.test(email);\n\n    if (!isEmValid) {\n      setAlertEM(true);\n      setTimeout(() => {\n        setAlertEM(false);\n      }, 5000);\n      return false;\n    } // postEmail(email); \n\n\n    setEmail(\"\");\n  };\n\n  const changeEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ResetPWForm // postEmail = { postEmail }\n    , {\n      submitHandler: submitHandler,\n      changeEmail: changeEmail,\n      email: email,\n      alertEM: alertEM\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ResetPW, \"SvBvRnLeRThyotV9l1Li5f5JCDU=\");\n\n_c = ResetPW;\nexport default ResetPW;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPW\");","map":{"version":3,"sources":["/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/userAccount/ResetPW.jsx"],"names":["React","useState","ResetPWForm","ResetPW","email","setEmail","alertEM","setAlertEM","submitHandler","e","preventDefault","emailValidator","isEmValid","test","setTimeout","changeEmail","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,qBAAxB;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC,CAFoB,CAIpB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMO,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,cAAc,GAAG,mDAAvB;AACA,UAAMC,SAAS,GAAGD,cAAc,CAACE,IAAf,CAAoBT,KAApB,CAAlB;;AAEA,QAAI,CAACQ,SAAL,EAAgB;AACdL,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAO,MAAAA,UAAU,CAAC,MAAM;AACfP,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAFS,EAEP,IAFO,CAAV;AAGA,aAAO,KAAP;AACD,KAZ0B,CAc3B;;;AAEAF,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAjBD;;AAmBA,QAAMU,WAAW,GAAIN,CAAD,IAAO;AACzBJ,IAAAA,QAAQ,CAACI,CAAC,CAACO,MAAF,CAASC,KAAV,CAAR;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE,QAAC,WAAD,CACE;AADF;AAEE,MAAA,aAAa,EAAKT,aAFpB;AAGE,MAAA,WAAW,EAAKO,WAHlB;AAIE,MAAA,KAAK,EAAKX,KAJZ;AAKE,MAAA,OAAO,EAAKE;AALd;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAYD,CAtDD;;GAAMH,O;;KAAAA,O;AAwDN,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ResetPWForm from \"./forms/ResetPWForm\";\n\nconst ResetPW = () => {\n  const [email, setEmail] = useState(\"\");\n  const [alertEM, setAlertEM] = useState(false);\n\n  // const postEmail = (email) =>{\n  //   data = { email }\n\n  //   //fetch data to send it to backend\n  //   fetch('http://localhost:4000/reset_password', {\n  //     method: \"POST\",\n  //     headers: {'Context-Type': 'application/json'},\n  //     body: JSON.stringify(data)\n  //     //in backend the data will be received in req.body\n  //   })\n  //   .then(res=>res.json())\n  //   .then(emailReceived=>console.log(emailReceived))\n  //   .catch(err=>console.log(err))\n  // }\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const emailValidator = /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,15}$/;\n    const isEmValid = emailValidator.test(email);\n\n    if (!isEmValid) {\n      setAlertEM(true);\n      setTimeout(() => {\n        setAlertEM(false);\n      }, 5000);\n      return false;\n    }\n\n    // postEmail(email); \n    \n    setEmail(\"\");\n  };\n\n  const changeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  return (\n    <>\n      <ResetPWForm\n        // postEmail = { postEmail }\n        submitHandler = { submitHandler }\n        changeEmail = { changeEmail }\n        email = { email }\n        alertEM = { alertEM }\n\n      />\n    </>\n  );\n};\n\nexport default ResetPW;\n"]},"metadata":{},"sourceType":"module"}