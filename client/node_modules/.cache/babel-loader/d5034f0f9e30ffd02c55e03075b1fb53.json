{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/userAccount/upload-edit/AvatarUploader.jsx\";\n//source: https://www.npmjs.com/package/react-avatar-edit\n//npm i react-avatar-edit\n//import React, { Component } from 'react'\nimport React from \"react\";\nimport Avatar from \"react-avatar-edit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AvatarUploader = props => {\n  console.log('Avatar!!'); // const [preview, setPreview] = useState(\"\");\n  // const [savedImage, setSavedImage] = useState(\"\");\n  // const [sourceImage, setSourceImage] = useState(\"\");\n  //   const onClose = () => {\n  //   setPreview(null);\n  //   setSavedImage(null);\n  //   setSourceImage(null);\n  // }\n  // const onCrop = (preview) => {\n  //   setPreview(preview)\n  // }\n  // const onBeforeFileLoad = (e) => {\n  //   if(e.target.files[0].size >=71680) {\n  //     alert(\"File is too big! The maximal file size is 71860 kbs\");\n  //     e.target.value=\"\";\n  //   }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        width: 350,\n        height: 250,\n        onCrop: props.onCrop,\n        onClose: props.onClose,\n        onBeforeFileLoad: props.onBeforeFileLoad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), props.preview ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.preview,\n        alt: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 26\n      }, this) : null, props.savedImage ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.savedImage,\n        alt: \"savedImages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}; // class AvatarUploader extends Component {\n//   constructor(props) {\n//     super(props)\n//     const src =\n//     this.state = {\n//       preview: null,\n//       savedImage: null,\n//       //src\n//     }\n//     this.onCrop = this.onCrop.bind(this)\n//     this.onClose = this.onClose.bind(this)\n//     this.onBeforeFileLoad = this.onBeforeFileLoad.bind(this)\n//   }\n//   onClose() {\n//     this.setState({preview: null,savedImage:this.state.preview})\n//   }\n//   onCrop(preview) {\n//     this.setState({preview})\n//   }\n//   onBeforeFileLoad(e) {\n//     if(e.target.files[0].size > 71680){\n//       alert(\"File is too big!\");\n//       e.target.value = \"\";\n//     };\n//   }\n//   render () {\n//     return (\n//       <div>\n//         <Avatar\n//           width={390}\n//           height={295}\n//           onCrop={this.onCrop}\n//           onClose={this.onClose}\n//           onBeforeFileLoad={this.onBeforeFileLoad}\n//           // src={this.state.src}\n//         />\n//         {this.state.preview ? <img src={this.state.preview} alt=\"Preview\" /> : null}\n//         {this.state.savedImage ? <img src={this.state.savedImage} alt=\"savedImages\" /> : null}\n//       </div>\n//     )\n//   }\n// }\n\n_c = AvatarUploader;\nexport default AvatarUploader;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvatarUploader\");","map":{"version":3,"sources":["/home/dci/Desktop/service-exchange-platform-finalProject/client/src/Components/userAccount/upload-edit/AvatarUploader.jsx"],"names":["React","Avatar","AvatarUploader","props","console","log","onCrop","onClose","onBeforeFileLoad","preview","savedImage"],"mappings":";AAAA;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,OAAO,MAAMC,cAAc,GAAIC,KAAD,IAAW;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EADuC,CAEvC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAA,2BACE;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,KAAK,EAAE,GADT;AAEE,QAAA,MAAM,EAAE,GAFV;AAGE,QAAA,MAAM,EAAEF,KAAK,CAACG,MAHhB;AAIE,QAAA,OAAO,EAAEH,KAAK,CAACI,OAJjB;AAKE,QAAA,gBAAgB,EAAEJ,KAAK,CAACK;AAL1B;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAA;AAAA;AAAA;AAAA,cARF,EASGL,KAAK,CAACM,OAAN,gBAAgB;AAAK,QAAA,GAAG,EAAEN,KAAK,CAACM,OAAhB;AAAyB,QAAA,GAAG,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,cAAhB,GAA4D,IAT/D,EAUGN,KAAK,CAACO,UAAN,gBACC;AAAK,QAAA,GAAG,EAAEP,KAAK,CAACO,UAAhB;AAA4B,QAAA,GAAG,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,cADD,GAEG,IAZN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAkBD,CAzCM,C,CA2CP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KAzFaR,c;AA2Fb,eAAeA,cAAf","sourcesContent":["//source: https://www.npmjs.com/package/react-avatar-edit\n//npm i react-avatar-edit\n\n//import React, { Component } from 'react'\nimport React from \"react\";\nimport Avatar from \"react-avatar-edit\";\n\nexport const AvatarUploader = (props) => {\n  console.log('Avatar!!')\n  // const [preview, setPreview] = useState(\"\");\n  // const [savedImage, setSavedImage] = useState(\"\");\n  // const [sourceImage, setSourceImage] = useState(\"\");\n\n  //   const onClose = () => {\n  //   setPreview(null);\n  //   setSavedImage(null);\n  //   setSourceImage(null);\n  // }\n\n  // const onCrop = (preview) => {\n  //   setPreview(preview)\n  // }\n\n  // const onBeforeFileLoad = (e) => {\n  //   if(e.target.files[0].size >=71680) {\n  //     alert(\"File is too big! The maximal file size is 71860 kbs\");\n  //     e.target.value=\"\";\n  //   }\n  // }\n\n  return (\n    <>\n      <div>\n        <Avatar\n          width={350}\n          height={250}\n          onCrop={props.onCrop}\n          onClose={props.onClose}\n          onBeforeFileLoad={props.onBeforeFileLoad}\n        />\n        <br />\n        {props.preview ? <img src={props.preview} alt=\"Preview\" /> : null}\n        {props.savedImage ? (\n          <img src={props.savedImage} alt=\"savedImages\" />\n        ) : null}\n      </div>\n    </>\n  );\n};\n\n// class AvatarUploader extends Component {\n\n//   constructor(props) {\n//     super(props)\n//     const src =\n//     this.state = {\n//       preview: null,\n//       savedImage: null,\n//       //src\n//     }\n//     this.onCrop = this.onCrop.bind(this)\n//     this.onClose = this.onClose.bind(this)\n//     this.onBeforeFileLoad = this.onBeforeFileLoad.bind(this)\n//   }\n\n//   onClose() {\n//     this.setState({preview: null,savedImage:this.state.preview})\n//   }\n\n//   onCrop(preview) {\n//     this.setState({preview})\n//   }\n\n//   onBeforeFileLoad(e) {\n//     if(e.target.files[0].size > 71680){\n//       alert(\"File is too big!\");\n//       e.target.value = \"\";\n//     };\n//   }\n\n//   render () {\n//     return (\n//       <div>\n//         <Avatar\n//           width={390}\n//           height={295}\n//           onCrop={this.onCrop}\n//           onClose={this.onClose}\n//           onBeforeFileLoad={this.onBeforeFileLoad}\n//           // src={this.state.src}\n//         />\n//         {this.state.preview ? <img src={this.state.preview} alt=\"Preview\" /> : null}\n//         {this.state.savedImage ? <img src={this.state.savedImage} alt=\"savedImages\" /> : null}\n//       </div>\n//     )\n//   }\n// }\n\nexport default AvatarUploader;\n"]},"metadata":{},"sourceType":"module"}